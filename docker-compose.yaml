services:
  gateway:
    build:
      context: docker/nginx
      dockerfile: Dockerfile
    container_name: theatre-gateway
    restart: always
    volumes:
      - static_volume:/code/staticfiles:ro
    ports:
      - "80:80"
    depends_on:
      - api
    networks:
      - theatre_network

  api:
    build:
      context: .
      dockerfile: docker/api/Dockerfile
    container_name: theatre-api
    volumes:
      - ./app:/code
      - ./static:/code/static
      - static_volume:/code/staticfiles
    env_file:
      - ./.env
    depends_on:
      elasticsearch:
        condition: service_healthy
    networks:
      - theatre_network


  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.17.3
    container_name: elasticsearch
    restart: always
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - xpack.security.enabled=false
      - xpack.security.enrollment.enabled=false
    volumes:
      - es_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - theatre_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200"]
      interval: 30s
      retries: 3
      timeout: 30s

  etl:
      build:
        context: .
        dockerfile: docker/etl/Dockerfile
      container_name: theatre-etl
      volumes:
        - etl:/etl
      depends_on:
        elasticsearch:
          condition: service_healthy
        api:
          condition: service_started
      env_file:
        - ./.env
      networks:
        - theatre_network


volumes:
  content_db:
  static_volume:
  es_data:
  etl:

networks:
  theatre_network:
    external: true